<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <ListViewPanel
    id="DocumentsLV">
    <ExposeIterator
      flags="document,editableDocument,hidden,canDeleteDocument"
      valueType="entity.Document"
      widget="DocumentsLV"/>
    <Require
      name="docQuery"
      type="gw.api.database.IQueryBeanResult&lt;Document&gt;"/>
    <Require
      name="searchCriteria"
      type="DocumentSearchCriteria"/>
    <Require
      name="viewOnly"
      type="boolean"/>
    <Variable
      name="documentsActionsHelper"
      type="gw.document.DocumentsActionsUIHelper"/>
    <Variable
      initialValue="documentsActionsHelper.DocumentContentActionsAvailable"
      name="contentActionsEnabled"
      type="boolean"/>
    <Variable
      initialValue="documentsActionsHelper.DocumentMetadataActionsAvailable"
      name="metadataActionsEnabled"
      type="boolean"/>
    <!-- Do not change the elementName from "Document" as there are specific logic dependencies that rely on that exact name. -->
    <RowIterator
      editable="false"
      elementName="Document"
      hasCheckBoxes="true"
      value="docQuery"
      valueType="gw.api.database.IQueryBeanResult&lt;entity.Document&gt;">
      <ToolbarFlag
        condition="documentsActionsHelper.isDeleteDocumentLinkVisible(Document) and documentsActionsHelper.isDeleteDocumentLinkAvailable(Document)"
        name="canDeleteDocument"/>
      <ToolbarFlag
        name="document"/>
      <ToolbarFlag
        condition="perm.Document.edit(Document)"
        name="editableDocument"/>
      <ToolbarFlag
        condition="Document.Obsolete"
        name="hidden"/>
      <Row>
        <BooleanRadioCell
          icon="Document.Icon"
          id="Icon"
          showHeaderIcon="false"
          value="true"
          valueType="boolean"/>
        <LinkCell
          id="Name"
          label="DisplayKey.get('Web.DocumentsLV.Name')"
          printWidth="4"
          sortBy="Document.Name"
          sortOrder="2"
          width="300">
          <Link
            action="Document.downloadContent()"
            available="documentsActionsHelper.isViewDocumentContentAvailable(Document, contentActionsEnabled)"
            download="inline"
            id="NameLink"
            label="Document.Name"
            styleClass="none"
            tooltip="documentsActionsHelper.getViewDocumentContentTooltip(Document)"/>
        </LinkCell>
        <LinkCell
          id="Actions"
          label="DisplayKey.get('Web.DocumentsLV.Actions')">
          <Link
            action="DocumentDetailsPopup.push(Document)"
            available="metadataActionsEnabled"
            icon="metadataActionsEnabled ? 'info_16.png' : 'info_16_disabled.png'"
            id="ViewPropertiesLink"
            styleClass="miniButton"
            tooltip="DisplayKey.get('Web.Policy.Documents.Document.ViewAndEdit.ViewProperties.Tooltip')"/>
          <Link
            action="Document.downloadContent()"
            available="documentsActionsHelper.isDownloadDocumentContentAvailable(Document) and Document.DocumentMimeTypeAllowed"
            download="attachment"
            icon="documentsActionsHelper.isDownloadDocumentContentAvailable(Document) and Document.DocumentMimeTypeAllowed ? 'download_document_16.png' : 'download_disabled_16.png'"
            id="DownloadLink"
            styleClass="miniButton"
            tooltip="Document.DocumentMimeTypeAllowed ? DisplayKey.get('Web.Policy.Documents.Document.ViewAndEdit.Download.Tooltip') : DisplayKey.get('Web.DocumentsLV.Button.DownloadNotAllowed.Tooltip')"
            visible="documentsActionsHelper.isDownloadDocumentContentVisible(Document)"/>
          <Link
            action="UploadDocumentContentPopup.push(Document)"
            available="documentsActionsHelper.isUploadDocumentContentAvailable(Document)"
            icon="documentsActionsHelper.isUploadDocumentContentAvailable(Document) ? 'upload_document_16.png' : 'upload_disabled_16.png'"
            id="UploadLink"
            styleClass="none"
            tooltip="documentsActionsHelper.UploadDocumentContentTooltip"
            visible="documentsActionsHelper.isUploadDocumentContentVisible(Document)"/>
          <Link
            action="gw.api.web.document.DocumentsHelper.deleteDocument(Document); gw.api.web.document.DocumentsHelper.evictDeletedDocument(Document)"
            available="metadataActionsEnabled"
            confirmMessage="DisplayKey.get('Web.DocumentsLV.Button.Delete.Confirm')"
            icon="metadataActionsEnabled ? 'ico_delete.png' : 'ico_delete_disabled.png' "
            id="DocumentsLV_DeleteLink"
            styleClass="miniButton"
            tooltip="DisplayKey.get('Web.Policy.Documents.Document.Delete.Tooltip')"
            visible="documentsActionsHelper.isDeleteDocumentLinkVisible(Document)"/>
          <Link
            id="DocumentsLV_ActionsDisabled"
            label="documentsActionsHelper.AsynchronousActionsMessage"
            styleClass="none"
            visible="documentsActionsHelper.isDocumentPending(Document)"/>
        </LinkCell>
        <TypeKeyCell
          id="Type"
          label="DisplayKey.get('Web.DocumentsLV.Type')"
          value="Document.Type"
          valueType="typekey.DocumentType"/>
        <TypeKeyCell
          id="Status"
          label="DisplayKey.get('Web.DocumentsLV.Status')"
          value="Document.Status"
          valueType="typekey.DocumentStatusType"/>
        <TextCell
          align="right"
          id="Author"
          label="DisplayKey.get('Web.DocumentsLV.Author')"
          value="Document.Author"/>
        <DateCell
          dateFormat="short"
          id="Date"
          label="DisplayKey.get('Web.DocumentsLV.Date')"
          timeFormat="medium"
          value="Document.DateModified"
          width="174"/>
        <LinkCell
          align="center"
          id="HiddenDocument"
          label="DisplayKey.get('Web.DocumentDetails.DocumentMetadata.Obsolete')"
          sortBy="Document.Obsolete"
          sortOrder="3"
          visible="searchCriteria.IncludeObsoletes">
          <Link
            icon="'check_yes.png'"
            id="Hidden"
            visible="Document.Obsolete"/>
        </LinkCell>
      </Row>
    </RowIterator>
  </ListViewPanel>
</PCF>
