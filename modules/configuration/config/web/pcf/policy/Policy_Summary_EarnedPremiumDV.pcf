<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <DetailViewPanel
    id="Policy_Summary_EarnedPremiumDV"
    visible="!policyPeriod.Archived">
    <Require
      name="policyPeriod"
      type="PolicyPeriod"/>
    <Variable
      initialValue="!policyPeriod.Archived and (policyPeriod.IsReportingPolicy and policyPeriod.CompletedNotReversedFinalAudits.Count == 0)"
      name="includeEBUR"
      type="boolean"/>
    <Variable
      initialValue="java.util.Date.Today"
      name="asOfDate"
      type="java.util.Date"/>
    <Variable
      initialValue="!policyPeriod.Archived ? (policyPeriod.IsReportingPolicy ? policyPeriod.LastReportedDate : policyPeriod.PeriodStart) : gw.api.system.PLDependenciesGateway.getSystemClock().DateTime"
      name="lastReportedDate"
      recalculateOnRefresh="true"
      type="java.util.Date"/>
    <Variable
      initialValue="gw.api.domain.financials.TransactionFinder.instance.findPostedTransactions(policyPeriod)"
      name="txs"
      type="java.util.List&lt;entity.Transaction&gt;"/>
    <Variable
      initialValue="txs.partition(\ t -&gt; t.Cost.PolicyLine.Pattern.Name)"
      name="txsByPolicyLine"
      type="java.util.Map&lt;String, java.util.List&lt;Transaction&gt;&gt;"/>
    <Variable
      name="errorMessage"
      recalculateOnRefresh="true"
      type="String"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;Web.Policy.EarnedPremium&quot;)"/>
      <BooleanRadioInput
        id="includesEBURorNot"
        label="DisplayKey.get(&quot;Web.Policy.IncludesEBUR&quot;)"
        value="includeEBUR"
        visible="!policyPeriod.Archived and policyPeriod.IsReportingPolicy"/>
      <ContentInput
        label="DisplayKey.get(&quot;Web.Policy.EarnedAsOf&quot;)"
        labelAbove="true"
        visible="CurrentLocation.Id == &quot;Policy_Summary_EarnedPremiumPopup&quot;">
        <Link
          action="setNewAsOfDate(ArgValue)"
          argInitialValue="asOfDate"
          argType="java.util.Date"
          id="setnewdate"
          performActionOnArgChange="true"
          styleClass="bigButton"/>
      </ContentInput>
      <!-- <Input
        id="x"
        label="&quot;Audit complete&quot;"
        value="policyPeriod.IsReportingPolicy and policyPeriod.CompletedNotReversedFinalAudits.Count != 0"
        visible="!policyPeriod.Archived"/>  <InputIterator
        elementName="eachline"
        value="txsByPolicyLine.Keys.toTypedArray()">
        <Input
          formatType="currency"
          helpText="DisplayKey.get(&quot;Web.Policy.EarnedPremiumExcludesTaxesAndFees&quot;)"
          id="showearnedpremium"
          label="eachline"
          value="(txsByPolicyLine.get(eachline) as entity.Transaction[]).sum(\ t -&gt; t.earnedAsOf(asOfDate, lastReportedDate, includeEBUR))">
          <MenuItem
            hideIfDisabled="false"
            icon="&quot;menu-checked.png&quot;"
            id="checkmarkicon"
            tooltip="DisplayKey.get(&quot;Web.Policy.FinalAuditComplete&quot;)"
            visible="!policyPeriod.Archived and (policyPeriod.IsReportingPolicy and policyPeriod.CompletedNotReversedFinalAudits.Count != 0)"/>
        </Input>
      </InputIterator> -->
      <ListViewInput
        labelAbove="true">
        <Toolbar/>
        <ListViewPanel
          alternateEntryStyle="false"
          id="alinelLV">
          <RowIterator
            editable="false"
            elementName="aline"
            pageSize="0"
            value="txsByPolicyLine.Keys.toTypedArray()"
            valueType="java.lang.String[]">
            <Row>
              <TextCell
                id="alinename"
                value="aline"/>
              <MonetaryAmountCell
                formatType="currency"
                id="amount"
                value="(txsByPolicyLine.get(aline)).sum(policyPeriod.PreferredSettlementCurrency, \ t -&gt; t.earnedAsOf(asOfDate, lastReportedDate, includeEBUR))">
                <PostOnChange
                  target="DATA_ONLY"/>
              </MonetaryAmountCell>
              <LinkCell
                id="Context2">
                <Link
                  icon="&quot;menu-checked.png&quot;"
                  id="checkmarkiconx"
                  tooltip="&quot;Final Audit Complete&quot;"
                  visible="!policyPeriod.Archived and (policyPeriod.IsReportingPolicy and policyPeriod.CompletedNotReversedFinalAudits.Count != 0)"/>
              </LinkCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <ContentInput
        labelAbove="true"
        visible="CurrentLocation.Id != &quot;Policy_Summary_EarnedPremiumPopup&quot;">
        <Link
          action="Policy_Summary_EarnedPremiumPopup.push(policyPeriod)"
          id="earnedpremiumpopuplink"
          label="DisplayKey.get(&quot;Web.Policy.CalculateEarnedAmountAsOfaDifferentDate&quot;)"/>
      </ContentInput>
      <InputSet
        visible="!policyPeriod.MultiLine">
        <Label
          label="DisplayKey.get(&quot;Web.Policy.LossRatio&quot;)"/>
        <TextInput
          boldValue="true"
          id="messageInput"
          value="errorMessage"/>
        <DateInput
          id="LossRatioCalcDate"
          label="DisplayKey.get(&quot;Web.Policy.DateOfLastLossRatioCalculation&quot;)"
          value="policyPeriod.PolicyTerm.LossRatioCalculationDate"/>
        <MonetaryAmountInput
          id="claimSystemTotalIncurred"
          label="DisplayKey.get(&quot;Web.Claims.TotalIncurred&quot;)"
          value="policyPeriod.PolicyTerm.ClaimSystemTotalIncurred"/>
        <TextInput
          formatType="percentagePoints"
          id="LossRatioInput"
          label="DisplayKey.get(&quot;Web.Policy.LossRatio&quot;)"
          value="policyPeriod.PolicyTerm.LossRatio"
          valueType="java.math.BigDecimal"/>
        <ButtonInput
          action="runReCalculateLossRatio()"
          id="RecalculateLossRatio"
          value="DisplayKey.get(&quot;Web.Policy.RecalculateLossRatio&quot;)"/>
      </InputSet>
    </InputColumn>
    <Code><![CDATA[function toggleIncludeEBUR() {
  if (includeEBUR == true) {
    includeEBUR = false
  } else {
    includeEBUR = true
  }
}
function setNewAsOfDate( newDate : java.util.Date) {
  asOfDate = newDate
}

function runReCalculateLossRatio() {
  errorMessage = policyPeriod.PolicyTerm.recalculateLossRatio()
}]]></Code>
  </DetailViewPanel>
</PCF>