<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="WCOptionCardPanelSet"
    mode="RetrospectiveRatingPlan">
    <Require
      name="wcLine"
      type="WorkersCompLine"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <DetailViewPanel>
      <InputColumn>
        <InputSet
          id="WCRetrospectiveRatingPlanInputSet">
          <Variable
            initialValue="gw.api.domain.StateSet.get( gw.api.domain.StateSet.WC_NOTMONOPOLISTIC )"
            name="nonMonopolisticStates"
            type="gw.api.domain.StateSet"/>
          <InputSetRef
            def="WCRetroRatingPlanBasicInfoInputSet(wcLine)"/>
          <ListViewInput
            editable="true"
            labelAbove="true"
            width="30">
            <Toolbar/>
            <ListViewPanel
              id="StandardPremiumLV">
              <Row
                renderAsSmartHeader="true">
                <TextCell
                  bold="true"
                  id="PercentStandardPremiumLabel"
                  value="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.PercentStandardPremium&quot;)"
                  wrapLabel="true"/>
                <TextCell
                  id="PercentStandardPremium1"
                  value="wcLine.RetrospectiveRatingPlan.PercentStandardPremium1"
                  valueType="java.math.BigDecimal"/>
                <TextCell
                  id="PercentStandardPremium2"
                  value="wcLine.RetrospectiveRatingPlan.PercentStandardPremium2"
                  valueType="java.math.BigDecimal"/>
                <TextCell
                  id="PercentStandardPremium3"
                  value="wcLine.RetrospectiveRatingPlan.PercentStandardPremium3"
                  valueType="java.math.BigDecimal"/>
              </Row>
              <Row>
                <TextCell
                  bold="true"
                  id="BasicPremiumFactorLabel"
                  value="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.BasicPremiumFactor&quot;)"
                  wrapLabel="true"/>
                <TextCell
                  editable="true"
                  id="BasicPremiumFactor1"
                  value="wcLine.RetrospectiveRatingPlan.BasicPremiumFactor1"
                  valueType="java.math.BigDecimal"/>
                <TextCell
                  editable="true"
                  id="BasicPremiumFactor2"
                  value="wcLine.RetrospectiveRatingPlan.BasicPremiumFactor2"
                  valueType="java.math.BigDecimal"/>
                <TextCell
                  editable="true"
                  id="BasicPremiumFactor3"
                  value="wcLine.RetrospectiveRatingPlan.BasicPremiumFactor3"
                  valueType="java.math.BigDecimal"/>
              </Row>
            </ListViewPanel>
          </ListViewInput>
          <Label
            label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.MultipliersFactors&quot;)"/>
          <ListViewInput
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="StateMultiplierLV"/>
            </Toolbar>
            <ListViewPanel
              id="StateMultiplierLV">
              <RowIterator
                editable="true"
                elementName="stateMultiplier"
                hasCheckBoxes="true"
                hideCheckBoxesIfReadOnly="true"
                numEntriesRequired="1"
                toCreateAndAdd="wcLine.RetrospectiveRatingPlan.createAndAddWCStateMultiplier()"
                toRemove="wcLine.RetrospectiveRatingPlan.removeFromStateMultipliers(stateMultiplier)"
                validationLabel="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.MultiplierValidation&quot;)"
                value="wcLine.RetrospectiveRatingPlan.StateMultipliers"
                valueType="entity.WCStateMultiplier[]">
                <Row>
                  <TypeKeyCell
                    editable="true"
                    filter="nonMonopolisticStates.contains(gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(VALUE))"
                    id="SelectState"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.State&quot;)"
                    numCols="15"
                    required="true"
                    value="stateMultiplier.State"
                    valueType="typekey.Jurisdiction"
                    width="150"/>
                  <TextCell
                    editable="true"
                    id="StateTaxMultiplier"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.StateTaxMultiplier&quot;)"
                    numCols="10"
                    required="true"
                    value="stateMultiplier.StateTaxMultiplier"
                    valueType="java.math.BigDecimal"/>
                  <TextCell
                    editable="true"
                    id="FederalTaxMultiplier"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.FederalTaxMultiplier&quot;)"
                    numCols="10"
                    required="true"
                    value="stateMultiplier.FederalTaxMultiplier"
                    valueType="java.math.BigDecimal"/>
                  <TextCell
                    editable="true"
                    id="StateExcessLossFactor"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.StateExcessLossFactor&quot;)"
                    numCols="10"
                    required="false"
                    value="stateMultiplier.StateExcessLossFactor"
                    valueType="java.math.BigDecimal"
                    wrapLabel="true"/>
                  <TextCell
                    editable="true"
                    id="FederalExcessLossFactor"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.FederalExcessLossFactor&quot;)"
                    numCols="10"
                    required="false"
                    value="stateMultiplier.FederalExcessLossFactor"
                    valueType="java.math.BigDecimal"/>
                </Row>
              </RowIterator>
            </ListViewPanel>
          </ListViewInput>
          <Label
            label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC&quot;)"/>
          <ListViewInput
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="LettersLV"/>
            </Toolbar>
            <ListViewPanel
              id="LettersLV">
              <RowIterator
                editable="true"
                elementName="letter"
                hasCheckBoxes="true"
                hideCheckBoxesIfReadOnly="true"
                numEntriesRequired="1"
                toCreateAndAdd="wcLine.RetrospectiveRatingPlan.createAndAddLetterOfCredit()"
                toRemove="wcLine.RetrospectiveRatingPlan.removeFromLettersOfCredit(letter)"
                validationLabel="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC.validation&quot;)"
                value="wcLine.RetrospectiveRatingPlan.LettersOfCredit"
                valueType="entity.WCRetroRatingLetterOfCredit[]">
                <Row>
                  <TextCell
                    editable="true"
                    id="LOCIssuer"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC.Issuer&quot;)"
                    numCols="50"
                    required="true"
                    value="letter.IssuerName"/>
                  <MonetaryAmountCell
                    currency="letter.Currency"
                    editable="true"
                    id="Amount"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC.Amount&quot;)"
                    required="true"
                    value="letter.Amount"/>
                  <DateCell
                    editable="true"
                    id="Effective"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC.Effective&quot;)"
                    required="true"
                    value="letter.ValidFrom"/>
                  <DateCell
                    editable="true"
                    id="Expiration"
                    label="DisplayKey.get(&quot;Web.Policy.WC.RetroRatingPlan.LOC.Expires&quot;)"
                    required="true"
                    value="letter.ValidTo"/>
                </Row>
              </RowIterator>
            </ListViewPanel>
          </ListViewInput>
        </InputSet>
      </InputColumn>
    </DetailViewPanel>
  </PanelSet>
</PCF>